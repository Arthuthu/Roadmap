@page "/register"
@inject IRegistrationService registrationService
@inject NavigationManager navManager


<div role="alert">
	<p>@registrationMessage</p>
</div>

<EditForm Model="model" OnValidSubmit="ExecuteRegister" class="">
	<DataAnnotationsValidator/>
	<ValidationSummary/>

	<div class="form-group row">
		<label for="username" class="col-md-2" col-form-label">Usuario:</label>
		<div class="col-md-10">
			<InputText id="username" class="form-control" @bind-Value="model.Username" />
			<ValidationMessage For="@(() => model.Username)"/>
		</div>
	</div>

	<div class="form-group row">
		<label for="password" class="col-md-2" col-form-label">Senha:</label>
		<div class="col-md-10">
			<InputText id="password" class="form-control" @bind-Value="model.Password" />
			<ValidationMessage For="@(() => model.Password)" />
		</div>
	</div>

	<div>
		<div class="col-md-12 text-right">
			<button type="submit" class="btn btn-success">Registrar</button>
		</div>
	</div>

</EditForm>

@code {
	private RegistrationModel model = new();

	private string registrationMessage = "";

	private async Task ExecuteRegister()
	{
		var result = await registrationService.RegisterUser(model);

		registrationMessage = result;

		//if (result is not null)
		//{
		//	navManager.NavigateTo("/");
		//}
		//else
		//{
		//	registrationErrorText = "Não foi possivel registrar o usuario";
		//	showRegistrationError = true;
		//}
	}
}
