@page "/emailconfirmation/{confirmationcode}"
@inject IUserService userService
@inject NavigationManager navManager
@code {
	[Parameter]
	public string? ConfirmationCode { get; set; }
	private UserModel? User { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await PageVerification();
	}

	private async Task PageVerification()
	{
		if (ConfirmationCode is null)
		{
			navManager.NavigateTo("/");

			return;
		}

		User = await userService.GetUserByConfirmationCode(new Guid(ConfirmationCode!));

		if (User is null)
		{
			navManager.NavigateTo("/");

			return;
		}

		if (User!.IsConfirmed is true)
		{
			navManager.NavigateTo("/");

			return;
		}

		if (User.ConfirmationCodeExpirationDate < DateTime.UtcNow.AddHours(-3))
		{
			navManager.NavigateTo($"/emailconfirmationexpired/{ConfirmationCode}", true);

			return;
		}

		if (User!.ConfirmationCode.ToString() == ConfirmationCode)
		{
			await UpdateUser();

			navManager.NavigateTo("/emailconfirmationsuccess");

			return;
		}

		return;
	}

	private async Task UpdateUser()
	{
		User!.IsConfirmed = true;

		await userService.UpdateUserEmailConfirmation(User);
	}
}
