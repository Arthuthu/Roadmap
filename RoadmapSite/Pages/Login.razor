@inject IAuthenticationService authService
@inject NavigationManager navManager

<EditForm Model="model" OnValidSubmit="ExecuteLogin" class="">
	<div class="row">
		<div class="col-auto">
			<label for="username" class="visually-hidden">Usuario</label>
			<InputText id="username" class="form-control" @bind-Value="model.Username" placeholder="Username"/>
		</div>

		<div class="col-auto">
			<label for="password" class="visually-hidden">Senha</label>
			<InputText type="password" id="password" class="form-control" @bind-Value="model.Password" placeholder="Password"/>
		</div>

		<div class="col-auto">
			<button type="submit" class="btn btn-success">Entrar</button>
		</div>
	</div>
</EditForm>

@code {
	private AuthenticationUserModel model = new();

	private bool showAuthenticationError = false;
	private string authenticationErrorText = "";

	private async Task ExecuteLogin()
	{
		showAuthenticationError = false;

		var result = await authService.Login(model);

		if (result is not null)
		{
			navManager.NavigateTo("/");
		}
		else
		{
			authenticationErrorText = "Houve um erro durante a authenticação";
			showAuthenticationError = true;
		}
	}
}
