@page "/login"
@inject IAuthenticationService authService
@inject NavigationManager navManager

@if (showAuthenticationError)
{
	<div class="alert alert-danger" role="alert">
		<p>@authenticationErrorText</p>
	</div>
}

<EditForm Model="model" OnValidSubmit="ExecuteLogin" class="">
	<DataAnnotationsValidator/>
	<ValidationSummary/>

	<div class="form-group row">
		<label for="username" class="col-md-2" col-form-label">Usuario:</label>
		<div class="col-md-10">
			<InputText id="username" class="form-control" @bind-Value="model.Username" />
			<ValidationMessage For="@(() => model.Username)"/>
		</div>
	</div>

	<div class="form-group row">
		<label for="password" class="col-md-2" col-form-label">Senha:</label>
		<div class="col-md-10">
			<InputText id="password" class="form-control" @bind-Value="model.Password" />
			<ValidationMessage For="@(() => model.Password)" />
		</div>
	</div>

	<div>
		<div class="col-md-12 text-right">
			<button type="submit" class="btn btn-success">Entrar</button>
		</div>
	</div>
</EditForm>

@code {
	private AuthenticationUserModel model = new();

	private bool showAuthenticationError = false;
	private string authenticationErrorText = "";

	private async Task ExecuteLogin()
	{
		showAuthenticationError = false;

		var result = await authService.Login(model);

		if (result is not null)
		{
			navManager.NavigateTo("/");
		}
		else
		{
			authenticationErrorText = "Usuario ou senha incorretos";
			showAuthenticationError = true;
		}
	}
}
