@page "/login"
@inject IAuthenticationService authService
@inject NavigationManager navManager

@if (showAuthenticationError)
{
	<div class="alert alert-danger" role="alert">
		<p>@authenticationErrorText</p>
	</div>
}

<EditForm Model="model" OnValidSubmit="ExecuteLogin" class="">
	<div class="form-div">
		<div class="iniciar-sessao-paragraph">
			<p>Iniciar sessão</p>
		</div>

		<div class="username-form-label">
			<div>
				<span>Usuario</span>
			</div>
			<div>
				<InputText id="username" class="form-input-text" @bind-Value="model.Username" placeholder:="Usuario" />
			</div>
		</div>

		<div class="password-form-label">
			<div>
				<span>Senha</span>
			</div>
			<div>
				<InputText id="password" class="form-input-text" @bind-Value="model.Password" placeholder:="Senha" />
			</div>
		</div>

		<div class="form-button-div">
			<button type="submit" class="form-button">Entrar</button>
		</div>
	</div>

	@if (showAuthenticationError)
	{
		<div class="alert alert-danger" role="alert">
			<p>@authenticationErrorText</p>
		</div>
	}
</EditForm>

@code {
	private AuthenticationUserModel model = new();

	private bool showAuthenticationError = false;
	private string authenticationErrorText = "";

	private async Task ExecuteLogin()
	{
		showAuthenticationError = false;

		var result = await authService.Login(model);

		if (result is not null)
		{
			navManager.NavigateTo("/");
		}
		else
		{
			authenticationErrorText = "Usuario ou senha incorretos";
			showAuthenticationError = true;
		}
	}
}
