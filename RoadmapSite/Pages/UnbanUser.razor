@inject NavigationManager navManager
@inject IUserService userService

@if (IsInitialized)
{
    <div class="ban-unban-div">
        <div class="text-center my-4 h4">
            Tem certeza que deseja desbanir este usuario?
        </div>

        <div class="text-center">
            <button @onclick=ToggleUnbanConfirmation class="second-style-button">
                Sim
            </button>
        </div>

        @if (showUnbanConfirmation)
        {
            <div class="text-center">
                <button @onclick="UnbanTheUser" class="second-style-button">
                    Confirmar
                </button>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public string? UserId { get; set; }
    private Guid LoggedInUserId { get; set; }
    private UserModel? AdministratorModel { get; set; }
    private UserModel? UserThatWillBeUnbanned { get; set; }
    private bool IsInitialized = false;
    private bool showUnbanConfirmation = false;

    protected override async Task OnInitializedAsync()
    {
        await PageVerification();
    }

    private async Task PageVerification()
    {
        LoggedInUserId = await userService.GetLoggedInUserId();
        AdministratorModel = await userService.GetUserById(LoggedInUserId);
        UserThatWillBeUnbanned = await userService.GetUserById(new Guid(UserId!));

        if (UserId is null || LoggedInUserId == Guid.Empty || AdministratorModel is null ||
            AdministratorModel!.IsAdmin is false || UserThatWillBeUnbanned is null)
        {
            navManager.NavigateTo("/notfound");

            return;
        }

        IsInitialized = true;

        return;
    }

    private async Task UnbanTheUser()
    {
        UserThatWillBeUnbanned!.IsBanned = false;

        await userService.UpdateUser(UserThatWillBeUnbanned);

        navManager.NavigateTo($"/profile/{UserThatWillBeUnbanned.Username}", forceLoad: true);
    }

    private void ToggleUnbanConfirmation()
    {
        showUnbanConfirmation = !showUnbanConfirmation;
    }
}
