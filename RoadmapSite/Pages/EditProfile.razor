@page "/editprofile/{userid}"
@inject NavigationManager navManager
@inject IUserService userService

@if (IsInitialized)
{
	<div class="edit-profile-label-div">
		Escreva algo em sua bio
	</div>

	<EditForm Model="LoggedInUserModel" OnValidSubmit="UpdateProfile" class="" Context="ProfileForm">
		<div class="first-input-text-div">
			<label for="bio" class="visually-hidden">Usuario</label>
			<div>
				<InputTextArea id="bio" class="form-input-text-description" @bind-Value="LoggedInUserModel!.Bio" placeholder="Bio (Maximo 1000 caracteres)" />
			</div>
		</div>

		<div class="text-center">
			<button type="submit" class="first-style-button">Salvar</button>
		</div>
	</EditForm>

	@if (showAuthenticationError)
	{
		<div role="alert" class="alert-message-div">
			<p class="alert-message">@authenticationErrorText</p>
		</div>
	}
}

@code {
	[Parameter]
	public string? UserId { get; set; }
	public Guid LoggedInUserId { get; set; }
	public UserModel? LoggedInUserModel { get; set; }
	private bool IsInitialized = false;
	private bool showAuthenticationError = false;
	private string authenticationErrorText = "";

	protected override async Task OnInitializedAsync()
	{
		await PageVerification();
	}

	private async Task PageVerification()
	{
		if (UserId is null)
		{
			navManager.NavigateTo("/notfound");
		}

		LoggedInUserId = await userService.GetLoggedInUserId();

		if (LoggedInUserId == Guid.Empty)
		{
			navManager.NavigateTo("/login");
		}

		LoggedInUserModel = await userService.GetUserById(new Guid(UserId!));

		if (LoggedInUserModel is null)
		{
			navManager.NavigateTo("/notfound");
		}

		if (LoggedInUserModel.IsBanned == "1")
		{
			navManager.NavigateTo("/banned");
		}

		if (UserId != LoggedInUserId.ToString())
		{
			navManager.NavigateTo("/notfound");
		}

		IsInitialized = true;
	}

	private async Task UpdateProfile()
	{
		var result = await userService.UpdateUser(LoggedInUserModel!);

		if (result is not null)
		{
			authenticationErrorText = "Perfil atualizado com sucesso";
			showAuthenticationError = true;
			navManager.NavigateTo($"/profile/{UserId}");
		}
		else
		{
			authenticationErrorText = "Não foi possivel atualizar o perfil";
			showAuthenticationError = true;
		}
	}
}
